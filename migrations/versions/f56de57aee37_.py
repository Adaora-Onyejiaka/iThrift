"""empty message

Revision ID: f56de57aee37
Revises: 
Create Date: 2023-06-18 10:42:28.359615

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f56de57aee37'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin',
    sa.Column('admin_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('admin_username', sa.String(length=20), nullable=True),
    sa.Column('admin_pwd', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('admin_id')
    )
    op.create_table('category',
    sa.Column('cat_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cat_name', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('cat_id')
    )
    op.create_table('plan',
    sa.Column('plan_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('plan_name', sa.String(length=29), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('plan_amt', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'failed', 'paid'), server_default='pending', nullable=False),
    sa.PrimaryKeyConstraint('plan_id')
    )
    op.create_table('state',
    sa.Column('state_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('state_name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('state_id')
    )
    op.create_table('lga',
    sa.Column('lga_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('state_id', sa.Integer(), nullable=True),
    sa.Column('lga_name', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['state_id'], ['state.state_id'], ),
    sa.PrimaryKeyConstraint('lga_id')
    )
    op.create_table('subscribers',
    sa.Column('sub_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sub_fname', sa.String(length=255), nullable=False),
    sa.Column('sub_lname', sa.String(length=255), nullable=False),
    sa.Column('sub_dob', sa.Date(), nullable=True),
    sa.Column('sub_phone', sa.String(length=100), nullable=True),
    sa.Column('sub_email', sa.String(length=100), nullable=False),
    sa.Column('sub_address', sa.String(length=100), nullable=False),
    sa.Column('sub_empadd', sa.String(length=100), nullable=False),
    sa.Column('sub_regdate', sa.DateTime(), nullable=True),
    sa.Column('sub_state_id', sa.Integer(), nullable=False),
    sa.Column('sub_lga_id', sa.Integer(), nullable=False),
    sa.Column('sub_pwd', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['sub_lga_id'], ['lga.lga_id'], ),
    sa.ForeignKeyConstraint(['sub_state_id'], ['state.state_id'], ),
    sa.PrimaryKeyConstraint('sub_id')
    )
    op.create_table('guarantors',
    sa.Column('gu_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('gu_fname', sa.String(length=255), nullable=False),
    sa.Column('gu_lname', sa.String(length=255), nullable=False),
    sa.Column('gu_email', sa.String(length=100), nullable=False),
    sa.Column('gu_dob', sa.Date(), nullable=True),
    sa.Column('gu_phone', sa.String(length=100), nullable=True),
    sa.Column('gu_address', sa.String(length=100), nullable=False),
    sa.Column('gu_empadd', sa.String(length=100), nullable=False),
    sa.Column('gu_regdate', sa.DateTime(), nullable=True),
    sa.Column('gu_state_id', sa.Integer(), nullable=False),
    sa.Column('gu_lga_id', sa.Integer(), nullable=False),
    sa.Column('sub_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['gu_lga_id'], ['lga.lga_id'], ),
    sa.ForeignKeyConstraint(['gu_state_id'], ['state.state_id'], ),
    sa.ForeignKeyConstraint(['sub_id'], ['subscribers.sub_id'], ),
    sa.PrimaryKeyConstraint('gu_id')
    )
    op.create_table('payrotation',
    sa.Column('rot_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sub_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['plan.plan_id'], ),
    sa.ForeignKeyConstraint(['sub_id'], ['subscribers.sub_id'], ),
    sa.PrimaryKeyConstraint('rot_id')
    )
    op.create_table('reviews',
    sa.Column('rev_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('rev_title', sa.String(length=255), nullable=False),
    sa.Column('rev_msg', sa.String(length=255), nullable=False),
    sa.Column('rev_date', sa.DateTime(), nullable=True),
    sa.Column('rev_userid', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['rev_userid'], ['subscribers.sub_id'], ),
    sa.PrimaryKeyConstraint('rev_id')
    )
    op.create_table('subscribersplan',
    sa.Column('subplan_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sub_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('datejoined', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['plan_id'], ['plan.plan_id'], ),
    sa.ForeignKeyConstraint(['sub_id'], ['subscribers.sub_id'], ),
    sa.PrimaryKeyConstraint('subplan_id')
    )
    op.create_table('payment',
    sa.Column('pay_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subplan_id', sa.Integer(), nullable=False),
    sa.Column('pay_amt', sa.Float(), nullable=False),
    sa.Column('sub_id', sa.Integer(), nullable=False),
    sa.Column('pay_date', sa.DateTime(), nullable=True),
    sa.Column('payment_status', sa.Enum('pending', 'failed', 'paid'), server_default='pending', nullable=False),
    sa.ForeignKeyConstraint(['sub_id'], ['subscribers.sub_id'], ),
    sa.ForeignKeyConstraint(['subplan_id'], ['subscribersplan.subplan_id'], ),
    sa.PrimaryKeyConstraint('pay_id')
    )
    op.create_table('collection',
    sa.Column('col_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('subplan_id', sa.Integer(), nullable=False),
    sa.Column('pay_id', sa.Integer(), nullable=False),
    sa.Column('col_amt', sa.Float(), nullable=False),
    sa.Column('sub_id', sa.Integer(), nullable=False),
    sa.Column('col_date', sa.DateTime(), nullable=True),
    sa.Column('col_status', sa.Enum('pending', 'failed', 'paid'), server_default='pending', nullable=False),
    sa.Column('pay_evidence', sa.String(length=255), nullable=False),
    sa.Column('pay_method', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['pay_id'], ['payment.pay_id'], ),
    sa.ForeignKeyConstraint(['plan_id'], ['plan.plan_id'], ),
    sa.ForeignKeyConstraint(['sub_id'], ['subscribers.sub_id'], ),
    sa.ForeignKeyConstraint(['subplan_id'], ['subscribersplan.subplan_id'], ),
    sa.PrimaryKeyConstraint('col_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('collection')
    op.drop_table('payment')
    op.drop_table('subscribersplan')
    op.drop_table('reviews')
    op.drop_table('payrotation')
    op.drop_table('guarantors')
    op.drop_table('subscribers')
    op.drop_table('lga')
    op.drop_table('state')
    op.drop_table('plan')
    op.drop_table('category')
    op.drop_table('admin')
    # ### end Alembic commands ###
